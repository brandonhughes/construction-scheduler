{"ast":null,"code":"import api from './api';\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n  register: async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data.user;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["api","AuthService","login","email","password","response","post","data","token","localStorage","setItem","error","register","userData","logout","removeItem","getCurrentUser","get","user","isAuthenticated","getItem"],"sources":["/Users/brandonhughes/Construction-Scheduler/client/src/services/auth.service.js"],"sourcesContent":["import api from './api';\n\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data.user;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n};\n\nexport default AuthService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,aAAa,EAAE;QAAEH,KAAK;QAAEC;MAAS,CAAC,CAAC;MACnE,IAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACpD;MACA,OAAOH,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,GAAGI,KAAK;IACpD;EACF,CAAC;EAEDC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,gBAAgB,EAAEO,QAAQ,CAAC;MAC3D,IAAIR,QAAQ,CAACE,IAAI,CAACC,KAAK,EAAE;QACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;MACpD;MACA,OAAOH,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd,MAAMA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,GAAGI,KAAK;IACpD;EACF,CAAC;EAEDG,MAAM,EAAEA,CAAA,KAAM;IACZL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAEDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAML,GAAG,CAACiB,GAAG,CAAC,UAAU,CAAC;MAC1C,OAAOZ,QAAQ,CAACE,IAAI,CAACW,IAAI;IAC3B,CAAC,CAAC,OAAOP,KAAK,EAAE;MACd,MAAMA,KAAK,CAACN,QAAQ,GAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,GAAGI,KAAK;IACpD;EACF,CAAC;EAEDQ,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAO,CAAC,CAACV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC;EACxC;AACF,CAAC;AAED,eAAenB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}