{"ast":null,"code":"var _jsxFileName = \"/Users/brandonhughes/Construction-Scheduler/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthService from '../services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        if (AuthService.isAuthenticated()) {\n          const user = await AuthService.getCurrentUser();\n          setCurrentUser(user);\n        }\n      } catch (err) {\n        console.error('Failed to load user', err);\n        AuthService.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUser();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const data = await AuthService.login(email, password);\n      setCurrentUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to login');\n      throw err;\n    }\n  };\n  const register = async userData => {\n    try {\n      setError(null);\n      const data = await AuthService.register(userData);\n      setCurrentUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to register');\n      throw err;\n    }\n  };\n  const logout = () => {\n    AuthService.logout();\n    setCurrentUser(null);\n  };\n  const updateProfile = userData => {\n    setCurrentUser({\n      ...currentUser,\n      ...userData\n    });\n  };\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: AuthService.isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"JNizP9FwoqjqDhcaQoKbEEqEJbk=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","AuthService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","error","setError","loadUser","isAuthenticated","user","getCurrentUser","err","console","logout","login","email","password","data","message","register","userData","updateProfile","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brandonhughes/Construction-Scheduler/client/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\nimport AuthService from '../services/auth.service';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      try {\n        if (AuthService.isAuthenticated()) {\n          const user = await AuthService.getCurrentUser();\n          setCurrentUser(user);\n        }\n      } catch (err) {\n        console.error('Failed to load user', err);\n        AuthService.logout();\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const data = await AuthService.login(email, password);\n      setCurrentUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to login');\n      throw err;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      setError(null);\n      const data = await AuthService.register(userData);\n      setCurrentUser(data.user);\n      return data;\n    } catch (err) {\n      setError(err.message || 'Failed to register');\n      throw err;\n    }\n  };\n\n  const logout = () => {\n    AuthService.logout();\n    setCurrentUser(null);\n  };\n\n  const updateProfile = (userData) => {\n    setCurrentUser({ ...currentUser, ...userData });\n  };\n\n  const value = {\n    currentUser,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated: AuthService.isAuthenticated,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}