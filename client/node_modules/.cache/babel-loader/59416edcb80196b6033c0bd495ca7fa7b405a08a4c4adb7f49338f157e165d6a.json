{"ast":null,"code":"import React from'react';import{Navigate,Outlet}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const PrivateRoute=_ref=>{let{allowedRoles}=_ref;const{currentUser,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}if(!currentUser){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\"});}if(allowedRoles&&!allowedRoles.includes(currentUser.role)){return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\"});}return/*#__PURE__*/_jsx(Outlet,{});};export default PrivateRoute;","map":{"version":3,"names":["React","Navigate","Outlet","useAuth","jsx","_jsx","PrivateRoute","_ref","allowedRoles","currentUser","loading","children","to","includes","role"],"sources":["/Users/brandonhughes/Construction-Scheduler/client/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst PrivateRoute = ({ allowedRoles }) => {\n  const { currentUser, loading } = useAuth();\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!currentUser) {\n    return <Navigate to=\"/login\" />;\n  }\n\n  if (allowedRoles && !allowedRoles.includes(currentUser.role)) {\n    return <Navigate to=\"/unauthorized\" />;\n  }\n\n  return <Outlet />;\n};\n\nexport default PrivateRoute;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,MAAM,KAAQ,kBAAkB,CACnD,OAASC,OAAO,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAsB,IAArB,CAAEC,YAAa,CAAC,CAAAD,IAAA,CACpC,KAAM,CAAEE,WAAW,CAAEC,OAAQ,CAAC,CAAGP,OAAO,CAAC,CAAC,CAE1C,GAAIO,OAAO,CAAE,CACX,mBAAOL,IAAA,QAAAM,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,GAAI,CAACF,WAAW,CAAE,CAChB,mBAAOJ,IAAA,CAACJ,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAAE,CAAC,CACjC,CAEA,GAAIJ,YAAY,EAAI,CAACA,YAAY,CAACK,QAAQ,CAACJ,WAAW,CAACK,IAAI,CAAC,CAAE,CAC5D,mBAAOT,IAAA,CAACJ,QAAQ,EAACW,EAAE,CAAC,eAAe,CAAE,CAAC,CACxC,CAEA,mBAAOP,IAAA,CAACH,MAAM,GAAE,CAAC,CACnB,CAAC,CAED,cAAe,CAAAI,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}