{"ast":null,"code":"import api from'./api';const AuthService={login:async(email,password)=>{try{const response=await api.post('/auth/login',{email,password});if(response.data.token){localStorage.setItem('token',response.data.token);}return response.data;}catch(error){throw error.response?error.response.data:error;}},register:async userData=>{try{const response=await api.post('/auth/register',userData);if(response.data.token){localStorage.setItem('token',response.data.token);}return response.data;}catch(error){throw error.response?error.response.data:error;}},logout:()=>{localStorage.removeItem('token');},getCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data.user;}catch(error){throw error.response?error.response.data:error;}},isAuthenticated:()=>{return!!localStorage.getItem('token');}};export default AuthService;","map":{"version":3,"names":["api","AuthService","login","email","password","response","post","data","token","localStorage","setItem","error","register","userData","logout","removeItem","getCurrentUser","get","user","isAuthenticated","getItem"],"sources":["/Users/brandonhughes/Construction-Scheduler/client/src/services/auth.service.js"],"sourcesContent":["import api from './api';\n\nconst AuthService = {\n  login: async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', { email, password });\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  register: async (userData) => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data.token) {\n        localStorage.setItem('token', response.data.token);\n      }\n      return response.data;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data.user;\n    } catch (error) {\n      throw error.response ? error.response.data : error;\n    }\n  },\n\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  },\n};\n\nexport default AuthService;\n"],"mappings":"AAAA,MAAO,CAAAA,GAAG,KAAM,OAAO,CAEvB,KAAM,CAAAC,WAAW,CAAG,CAClBC,KAAK,CAAE,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,aAAa,CAAE,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CACnE,GAAIC,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACN,QAAQ,CAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,CAAGI,KAAK,CACpD,CACF,CAAC,CAEDC,QAAQ,CAAE,KAAO,CAAAC,QAAQ,EAAK,CAC5B,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACM,IAAI,CAAC,gBAAgB,CAAEO,QAAQ,CAAC,CAC3D,GAAIR,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAE,CACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEL,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CACpD,CACA,MAAO,CAAAH,QAAQ,CAACE,IAAI,CACtB,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACN,QAAQ,CAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,CAAGI,KAAK,CACpD,CACF,CAAC,CAEDG,MAAM,CAAEA,CAAA,GAAM,CACZL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAEDC,cAAc,CAAE,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACF,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAAL,GAAG,CAACiB,GAAG,CAAC,UAAU,CAAC,CAC1C,MAAO,CAAAZ,QAAQ,CAACE,IAAI,CAACW,IAAI,CAC3B,CAAE,MAAOP,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CAACN,QAAQ,CAAGM,KAAK,CAACN,QAAQ,CAACE,IAAI,CAAGI,KAAK,CACpD,CACF,CAAC,CAEDQ,eAAe,CAAEA,CAAA,GAAM,CACrB,MAAO,CAAC,CAACV,YAAY,CAACW,OAAO,CAAC,OAAO,CAAC,CACxC,CACF,CAAC,CAED,cAAe,CAAAnB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}